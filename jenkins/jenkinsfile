podTemplate(name: "jnlp-slave") {
  node("jnlp-slave") {
    stage('准备环境变量')
        registry_url = "https://hub.linux100.cc"
        registry_addr = "hub.linux100.cc"
        registry_access = "1c0cf695-a284-459c-9f0c-a28c63dbf20d"
        maintainer_name = "library"
        container_name = "JAVA_signature"
    stage 'svn checkout java '
    checkout([$class: 'SubversionSCM', 
              additionalCredentials: [], 
              excludedCommitMessages: '', 
              excludedRegions: '', 
              excludedRevprop: '', 
              excludedUsers: '', 
              filterChangelog: false, 
              ignoreDirPropChanges: false, 
              includedRegions: '', 
              locations: [[credentialsId: '0e8b367a-ec0a-4842-a846-f795b36ca7fb', 
                           depthOption: 'infinity', 
                           ignoreExternalsOption: true, 
                           local: 'src', 
                           remote: "http://10.252.163.79:8181/svn/DianZiQianZhang/trunk/java/signature"]], 
              workspaceUpdater: [$class: 'UpdateUpdater']])
    container("jnlp") {
       stage 'Build a Maven project'
       sh """
       cd src && mvn clean package
       wget -O ../Dockerfile  http://monitor.haolawyers.cn:8888/zabbix_soft/k8s_JAVA_signature_Dockerfile
       """
      }
    stage('login harbor and push images')
       docker.withRegistry("https://${registry_addr}", "${registry_access}"){
         stage('Build imges')
            def NewApp = docker.build("${registry_addr}/${maintainer_name}/${container_name}:20170720")
            echo "The Demo Image is ${registry_addr}/${maintainer_name}/${container_name}:20170720"
         stage('Push imges')
            NewApp.push()
    }
  }
}

